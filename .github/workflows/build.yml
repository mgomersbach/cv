name: Build and Deploy CV

on:
  push:
    branches: master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.131.0

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update && \
        sudo apt-get install -y \
          make \
          texlive \
          texlive-latex-extra \
          texlive-fonts-recommended \
          texlive-xetex \
          pandoc \
          pandoc-plantuml-filter

    - name: Build CV Files
      run: make all

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cv-results
        path: |
          dist/cv-np.pdf
          dist/cv-mdout.md
          dist/cv-np.docx
          dist/cv.html

    - name: Install Hugo CLI
      run: |
        wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
        && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
    - name: Install Dart Sass
      run: sudo snap install dart-sass
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5
    - name: Install Node.js dependencies
      run: |
        [[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true
        sudo npm install -g postcss-cli
        sudo npm install -g npx --force
        npm install tailwindcss@latest

    - name: Build with Hugo
      env:
        HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
        HUGO_ENVIRONMENT: production
        TZ: Europe/Amsterdam
      working-directory: ghpages
      run: |
        hugo \
          --gc \
          --minify \
          --baseURL "${{ steps.pages.outputs.base_url }}/"          
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
